# Risk MCP Environment Configuration
# Copy this file to .env and customize values

# =============================================================================
# Server Configuration
# =============================================================================

# API server port
RISK_API_PORT=8080

# Server mode: api, mcp, or dual
RISK_MODE=dual

# Data directory for game persistence
RISK_DATA_DIR=./data

# Log level: DEBUG, INFO, WARNING, ERROR
RISK_LOG_LEVEL=INFO

# Enable debug mode (verbose logging)
RISK_DEBUG=false

# Server host binding (0.0.0.0 for Docker, 127.0.0.1 for local)
RISK_API_HOST=0.0.0.0

# =============================================================================
# UV Configuration
# =============================================================================

# Compile Python bytecode for better performance
UV_COMPILE_BYTECODE=1

# Cache directory for UV
UV_CACHE_DIR=./.uv-cache

# Link mode: copy, hardlink, or symlink
UV_LINK_MODE=copy

# Use system Python when available
UV_SYSTEM_PYTHON=0

# Number of concurrent downloads
UV_CONCURRENT_DOWNLOADS=8

# =============================================================================
# AI/LLM Configuration
# =============================================================================

# OpenAI API Configuration
OPENAI_API_KEY=your-openai-key-here
OPENAI_MODEL=gpt-4
OPENAI_BASE_URL=https://api.openai.com/v1

# Anthropic API Configuration  
ANTHROPIC_API_KEY=your-anthropic-key-here
ANTHROPIC_MODEL=claude-3-haiku-20240307

# Google AI Configuration
GOOGLE_API_KEY=your-google-key-here
GOOGLE_MODEL=gemini-pro

# Ollama Configuration (for local models)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_MODEL=mistral-nemo:latest

# Default LLM provider: openai, anthropic, google, ollama
DEFAULT_LLM_PROVIDER=ollama

# =============================================================================
# Agent Configuration
# =============================================================================

# Agent check interval (seconds)
AGENT_CHECK_INTERVAL=15

# Agent decision timeout (seconds)
AGENT_DECISION_TIMEOUT=120

# Maximum number of agents per game
MAX_AGENTS_PER_GAME=6

# Default agent names (comma-separated)
DEFAULT_AGENT_NAMES=Alice,Bob,Charlie,Diana,Eve,Frank

# Agent strategy update frequency (turns)
AGENT_STRATEGY_UPDATE_FREQ=3

# Agent context configuration for better strategic planning
AGENT_ACTION_LIMIT=75          # Number of recent actions to include (~7-8 turns vs default 50)
AGENT_RECENT_TURNS=4           # Number of recent turns to keep in full detail (vs default 3)
AGENT_MESSAGE_LIMIT=8          # Number of recent messages to include (vs default 5)
AGENT_THREAT_ANALYSIS_LIMIT=8  # Number of threats to analyze in detail (vs default 5)

# Predefined AI Models for interactive configuration (JSON format)
# Each model has: name, default_temp, description
RISK_PREDEFINED_MODELS={"gpt-4": {"name": "gpt-4", "default_temp": 0.7, "description": "Most capable, best for complex strategy"}, "gpt-4-turbo": {"name": "gpt-4-turbo", "default_temp": 0.7, "description": "Fast and capable, good balance"}, "gpt-3.5-turbo": {"name": "gpt-3.5-turbo", "default_temp": 0.8, "description": "Fast and reliable, good for testing"}, "claude-3-opus": {"name": "claude-3-opus", "default_temp": 0.6, "description": "Thoughtful and strategic"}, "claude-3-sonnet": {"name": "claude-3-sonnet", "default_temp": 0.7, "description": "Balanced performance"}, "llama-3-70b": {"name": "llama-3-70b", "default_temp": 0.8, "description": "Open source, creative"}, "deepseek-coder": {"name": "deepseek-coder", "default_temp": 0.6, "description": "Logical and analytical"}, "custom": {"name": "custom", "default_temp": 0.7, "description": "Enter your own model name"}}

# Default personality templates for agents
RISK_PERSONALITY_TEMPLATES={"aggressive": "Play aggressively, focus on early expansion and eliminating weak players", "diplomatic": "Form alliances and use negotiation to advance your position", "defensive": "Control key territories and build strong defensive positions", "balanced": "Adapt strategy based on game state and opportunities", "creative": "Use unconventional strategies and surprise tactics", "analytical": "Make data-driven decisions and calculate risks carefully"}

# =============================================================================
# Short-Term Memory System Configuration  
# =============================================================================

# Enable/disable short-term memory system (default: true)
MEMORY_SYSTEM_ENABLED=true

# Token limit before memory trimming (default: 12000)
MEMORY_MAX_TOKENS=12000

# Recent turns to preserve completely (default: 6)
MEMORY_PRESERVE_TURNS=6

# Include system messages in trimming (default: true)
MEMORY_INCLUDE_SYSTEM=true

# Conversation cleanup time in hours (default: 24)
MEMORY_CONVERSATION_TTL=24

# =============================================================================
# Context Summarization Configuration (Legacy)
# =============================================================================

# Enable context summarization to prevent memory overflow
SUMMARIZATION_ENABLED=true

# Token threshold to trigger summarization
SUMMARIZATION_THRESHOLD_TOKENS=12000

# OpenAI-compatible API endpoint for summarization
SUMMARIZATION_MODEL_URL=https://api.openai.com/v1

# Model name for summarization (e.g., gpt-3.5-turbo, gpt-4)
SUMMARIZATION_MODEL_NAME=gpt-3.5-turbo

# API key for summarization service
SUMMARIZATION_API_KEY=your-summarization-api-key-here

# Temperature for summarization model (0.0-1.0)
SUMMARIZATION_TEMPERATURE=0.3

# Maximum tokens for summarization requests
SUMMARIZATION_MAX_TOKENS=2000

# Number of recent turns to keep in full detail
SUMMARIZATION_KEEP_RECENT_TURNS=3

# Enable caching of summaries in database
SUMMARIZATION_CACHE_ENABLED=true

# =============================================================================
# Game Configuration
# =============================================================================

# Default number of players for new games
DEFAULT_PLAYERS=2

# Game auto-save interval (seconds)
GAME_AUTOSAVE_INTERVAL=300

# Maximum game duration (minutes, 0 = unlimited)
MAX_GAME_DURATION=180

# Enable diplomatic messaging between agents
ENABLE_DIPLOMACY=true

# Combat randomness factor (0.0 = deterministic, 1.0 = fully random)
COMBAT_RANDOMNESS=0.7

# =============================================================================
# Tournament Mode Configuration
# =============================================================================

# Enable hosted tournament mode (when true, bypasses normal setup)
TOURNAMENT_MODE=false

# Character submission phase duration (seconds) - default 15 minutes
TOURNAMENT_SUBMIT_PHASE_DURATION=900

# Voting phase duration (seconds) - default 15 minutes  
TOURNAMENT_VOTING_PHASE_DURATION=900

# Game phase duration (seconds) - default 1 hour
TOURNAMENT_GAME_PHASE_DURATION=3600

# End screen display duration (seconds) - default 5 minutes
TOURNAMENT_END_SCREEN_DURATION=300

# Auto-restart tournament after end screen
TOURNAMENT_AUTO_RESTART=true

# Maximum characters that can be submitted per tournament
TOURNAMENT_MAX_SUBMISSIONS=20

# Number of characters selected for each game (2-6)
TOURNAMENT_SELECTED_CHARACTERS=4

# Tournament database file for character storage
TOURNAMENT_DB_PATH=./data/tournament.db

# =============================================================================
# Database Configuration
# =============================================================================

# SQLite database file for action tracking
ACTION_DB_PATH=./data/risk_actions.db

# Enable database connection pooling
DB_POOL_ENABLED=true

# Database connection timeout (seconds)
DB_TIMEOUT=30

# Auto-vacuum database on startup
DB_AUTO_VACUUM=true

# =============================================================================
# Docker Configuration
# =============================================================================

# Docker container timezone
CONTAINER_TZ=UTC

# Docker log driver
DOCKER_LOG_DRIVER=json-file

# Docker log options
DOCKER_LOG_MAX_SIZE=10m
DOCKER_LOG_MAX_FILE=3

# Enable Docker healthchecks
DOCKER_HEALTHCHECK_ENABLED=true

# =============================================================================
# Development Configuration
# =============================================================================

# Enable development mode features
DEV_MODE=false

# Auto-reload on file changes
DEV_AUTO_RELOAD=false

# Enable detailed error traces
DEV_DETAILED_ERRORS=false

# Enable request/response logging
DEV_LOG_REQUESTS=false

# Enable agent decision profiling
DEV_PROFILE_DECISIONS=false

# Mock AI responses for testing
DEV_MOCK_AI=false

# =============================================================================
# Security Configuration
# =============================================================================

# API rate limiting (requests per minute)
API_RATE_LIMIT=1000

# Enable CORS (for web dashboard)
ENABLE_CORS=true

# Allowed CORS origins (comma-separated)
CORS_ORIGINS=*

# API key for protected endpoints (leave empty to disable)
API_KEY=

# Enable request authentication
ENABLE_AUTH=false

# =============================================================================
# Monitoring Configuration
# =============================================================================

# Enable metrics collection
ENABLE_METRICS=true

# Metrics export interval (seconds)
METRICS_INTERVAL=60

# Enable performance monitoring
ENABLE_PERF_MONITORING=false

# Health check endpoints timeout (seconds)
HEALTH_CHECK_TIMEOUT=5

# =============================================================================
# Advanced Configuration
# =============================================================================

# Python optimization level (0, 1, or 2)
PYTHONOPTIMIZE=1

# Python hash seed (for reproducible runs)
PYTHONHASHSEED=0

# Enable Python development mode
PYTHONDEVELOPMENT=0

# Garbage collection threshold
PYTHON_GC_THRESHOLD=700,10,10

# Memory allocation debugging
PYTHONMALLOC=default

# =============================================================================
# Feature Flags
# =============================================================================

# Enable experimental features
ENABLE_EXPERIMENTAL=false

# Enable advanced AI strategies
ENABLE_ADVANCED_AI=true

# Enable game replay functionality
ENABLE_GAME_REPLAY=true

# Enable real-time dashboard updates
ENABLE_REAL_TIME_DASHBOARD=true

# Enable agent learning from game history
ENABLE_AGENT_LEARNING=false

# =============================================================================
# Support/Donation Configuration
# =============================================================================

# PayPal donation link
PAYPAL_DONATION_URL=https://www.paypal.com/donate/?hosted_button_id=YOUR_PAYPAL_BUTTON_ID

# Bitcoin address for donations
BITCOIN_ADDRESS=bc1qexamplebitcoinaddresshere

# =============================================================================
# End of Configuration
# =============================================================================

# Note: Remove or comment out any settings you don't need to customize.
# The application will use sensible defaults for any missing values.

# For production deployment:
# 1. Set strong API keys for your chosen LLM provider
# 2. Configure appropriate log levels and data directories
# 3. Set RISK_DEBUG=false and DEV_MODE=false
# 4. Configure proper security settings if needed
# 5. Set resource limits appropriate for your environment

# For development:
# 1. Set DEV_MODE=true for additional debugging features
# 2. Use DEV_AUTO_RELOAD=true for automatic code reloading
# 3. Set RISK_LOG_LEVEL=DEBUG for verbose logging
# 4. Configure local LLM endpoints if using Ollama or similar
